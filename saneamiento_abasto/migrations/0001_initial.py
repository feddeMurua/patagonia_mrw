# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-08-04 13:27
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('personas', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Abastecedor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsable', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='personas.PersonaGenerica')),
            ],
        ),
        migrations.CreateModel(
            name='ControlDePlaga',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(default=django.utils.timezone.now)),
                ('tipo_plaga', models.CharField(choices=[(b'Palomas', 'Palomas'), (b'Ratas', 'Ratas'), (b'Cucarachas', 'Cucarachas'), (b'Murci\xc3\xa9lagos', 'Murci\xe9lagos'), (b'Hormigas', 'Hormigas'), (b'Chinches', 'Chinches'), (b'Garrapatas', 'Garrapatas'), (b'Pulgas', 'Pulgas'), (b'Otros', 'Otros')], max_length=50)),
                ('procedimiento', models.CharField(max_length=400)),
                ('recomendaciones', models.CharField(blank=True, max_length=400, null=True)),
                ('fecha_prox_visita', models.DateField(blank=True, null=True)),
                ('pagado', models.BooleanField(default=True)),
                ('funcionario_actuante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='funcionario', to='personas.PersonalPropio')),
                ('responsable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsable_propietario', to='personas.PersonaFisica')),
            ],
        ),
        migrations.CreateModel(
            name='CuentaCorriente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abastecedor', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='saneamiento_abasto.Abastecedor')),
            ],
        ),
        migrations.CreateModel(
            name='Desinfeccion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_realizacion', models.DateField(default=django.utils.timezone.now)),
                ('proximo_vencimiento', models.DateField()),
                ('quincena', models.CharField(max_length=30)),
                ('justificativo', models.TextField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DetalleCC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pagado', models.BooleanField(default=False)),
                ('cc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='saneamiento_abasto.CuentaCorriente')),
            ],
        ),
        migrations.CreateModel(
            name='PagoDiferido',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto', models.FloatField()),
                ('fecha_pago', models.CharField(choices=[(b'30', '30 Dias'), (b'60', '60 Dias'), (b'90', '90 Dias'), (b'120', '120 Dias'), (b'150', '150 Dias'), (b'180', '180 Dias')], max_length=15)),
                ('control', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='saneamiento_abasto.ControlDePlaga')),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reinspeccion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(default=django.utils.timezone.now)),
                ('turno', models.CharField(choices=[(b'Ma\xc3\xb1ana', 'Ma\xf1ana'), (b'Tarde', 'Tarde'), (b'Sabado', 'Sabado'), (b'Feriado', 'Feriado'), (b'Excepcion', 'Excepcion')], max_length=10)),
                ('precintado', models.IntegerField(blank=True, null=True)),
                ('certificado', models.IntegerField()),
                ('total_kg', models.IntegerField(blank=True, null=True)),
                ('detalles', models.BooleanField(default=True)),
                ('abastecedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='saneamiento_abasto.Abastecedor')),
                ('inspectores', models.ManyToManyField(to='personas.PersonalPropio')),
            ],
        ),
        migrations.CreateModel(
            name='ReinspeccionPrecios',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kg_min', models.IntegerField(default=30, validators=[django.core.validators.MinValueValidator(1)])),
                ('precio_min', models.FloatField(default=55, validators=[django.core.validators.MinValueValidator(0)])),
                ('precio_kg', models.FloatField(default=0.25, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'verbose_name': 'Precios Vigentes Reinspeccion',
            },
        ),
        migrations.CreateModel(
            name='ReinspeccionProducto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kilo_producto', models.FloatField()),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='saneamiento_abasto.Producto')),
                ('reinspeccion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='saneamiento_abasto.Reinspeccion')),
            ],
        ),
        migrations.CreateModel(
            name='Vehiculo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marca', models.CharField(choices=[(b'Alfa Romeo', 'Alfa Romeo'), (b'Audi', 'Audi'), (b'BMW', 'BMW'), (b'Chery', 'Chery'), (b'Chevrolet', 'Chevrolet'), (b'Chrysler', 'Chrysler'), (b'Citroen', 'Citro\xebn'), (b'Dodge', 'Dodge'), (b'DS', 'DS'), (b'Fiat', 'Fiat'), (b'Ford', 'Ford'), (b'Honda', 'Honda'), (b'Hyundai', 'Hyundai'), (b'Iveco', 'Iveco'), (b'KIA', 'KIA'), (b'Land Rover', 'Land Rover'), (b'Mercedes Benz', 'Mercedes Benz'), (b'Mini', 'Mini'), (b'Peugeot', 'Peugeot'), (b'RAM', 'RAM'), (b'Renault', 'Renault'), (b'Suzuki', 'Suzuki'), (b'Toyota', 'Toyota'), (b'Volkswagen', 'Volkswagen')], max_length=15)),
                ('dominio', models.CharField(max_length=50, unique=True)),
                ('tipo_vehiculo', models.CharField(choices=[(b'TSA', 'Transporte de Sustancias Alimenticias'), (b'TPP', 'Transporte P\xfablico de Pasajeros')], default='TPP', max_length=3)),
                ('nro', models.IntegerField(unique=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('tipo_tpp', models.CharField(blank=True, choices=[(b'Colectivo', 'Colectivo'), (b'TR', 'Taxi/Remisse'), (b'Escolar', 'Escolar')], max_length=15, null=True)),
                ('disposicion_resolucion', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('categoria', models.CharField(blank=True, choices=[(b'Categoria_A', 'Transporte isot\xe9rmico con equipo de frio para transportar productos congelados'), (b'Categoria_B', 'Transporte isot\xe9rmico con equipo de frio para transportar productos refrigerados'), (b'Categoria_C', 'Transporte isot\xe9rmico de productos envasados que no requieran refrigeraci\xf3n'), (b'Categoria_D', 'Transporte con caja abierta y protecci\xf3n mediante lona o toldo'), (b'Categoria_E', 'Otros')], max_length=50, null=True)),
                ('rubro_vehiculo', models.CharField(blank=True, max_length=25, null=True)),
                ('titular', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personas.PersonaFisica')),
            ],
        ),
        migrations.AddField(
            model_name='detallecc',
            name='reinspeccion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='saneamiento_abasto.Reinspeccion'),
        ),
        migrations.AddField(
            model_name='desinfeccion',
            name='vehiculo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='saneamiento_abasto.Vehiculo'),
        ),
    ]
